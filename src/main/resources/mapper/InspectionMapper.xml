<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.douzone.lis_back.mapper.InspectionMapper">

    <select id="getUnregisteredMapper" resultType="com.douzone.lis_back.domain.RegisterDTO">
        select *
        from prescribe as p left join collecting as c on p.prescribe_code = c.prescribe_code
                            left join register as r on c.barcode = r.barcode and r.prescribe_code = c.prescribe_code
                            left join visit as v on p.visit_code = v.visit_code
        where p.status_code = "S" and c.cancel_barcode_dt is null and c.cancel_collecting_dt is null and r.cancel_register_dt is null;
    </select>

    <select id="getSearchRegisterMapper" resultType="com.douzone.lis_back.domain.RegisterDTO" parameterType="com.douzone.lis_back.domain.SearchDTO">
        select *
        from register as r left join collecting as c on r.barcode = c.barcode and r.prescribe_code = c.prescribe_code
            left join prescribe as p on c.prescribe_code= p.prescribe_code
            left join order_slip as o on p.order_code = o.order_code
            left join visit as v on v.visit_code = p.visit_code
            left join patient as pat on pat.patient_no = v.patient_no
        where r.cancel_register_dt is null and p.status_code in ("D", "S")
        <if test="barcode == null">
        and left(r.register_dt, 10) between #{stDate} and #{endDate}
        </if>
        <if test="barcode != null">
        and r.barcode LIKE concat('%',#{barcode},'%')
        </if>
        ORDER BY r.register_dt DESC
    </select>

    <select id="getSearchInspectionTypeMapper" resultType="com.douzone.lis_back.domain.InspectionTypeDTO" parameterType="String">
        select *
        from inspection_type
        where order_code = #{orderCode}
        ORDER BY inspection_code ASC;
    </select>

    <select id="getSelectConclusionMapper" resultType="com.douzone.lis_back.domain.ConclusionDTO" parameterType="com.douzone.lis_back.domain.SearchDTO">
        select *
        from conclusion as c
            left join register as r on c.register_code = r.register_code
        where r.barcode = #{barcode}
        ORDER BY c.inspection_code ASC
    </select>

    <select id="getPrescribeCode" resultType="String" parameterType="Map">
        select c.prescribe_code
        from collecting as c
            left join prescribe as p on c.prescribe_code = p.prescribe_code
            left join order_slip as o on o.order_code =p.order_code
        where c.barcode = #{barcode} and o.order_code=#{orderCode};
    </select>

    <select id="getUnsuitableStatus" resultType="com.douzone.lis_back.domain.UnsuitableStatusDTO">
        select *
        from unsuitable_status_management as u
            left join unsuitable_reason as ur on ur.unsuitable_reason_code = u.unsuitable_reason_code;
    </select>

    <insert id="insertConclusionBatchMapper" parameterType="com.douzone.lis_back.domain.ConclusionDTO">

        INSERT INTO conclusion (inspection_code, register_code, figures, inspection_dt, note)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            <if test="index >= 0">
                (#{item.inspectionCode},#{item.registerCode},#{item.figures},now(),#{item.note})
            </if>
        </foreach>;
    </insert>

    <update id="updateConclusionBatchMapper" parameterType="com.douzone.lis_back.domain.ConclusionDTO">
        <foreach collection="list" item="item" index="index" separator=";">
            UPDATE conclusion
            <set>
                inspection_dt=now(), figures= #{item.figures}, note= #{item.note}
            </set>
            WHERE result_no=#{item.resultNo}
        </foreach>
    </update>

    <update id="updatePrescribeStatusMapper" parameterType="Object">
        update prescribe
        set status_code= #{status}
        where prescribe_code = (select prescribe_code from register where register_code=#{registerCode} and cancel_register_dt is null);
    </update>

</mapper>